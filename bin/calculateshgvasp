#!/bin/env python3
# -*- coding: utf-8 -*-


import pickle
from tbshg.optic import optproperty,parallel_kmesh
import numpy as np
from mpi4py import MPI
import sys

from tbshg.utils.kmesh import KPOINTS_mesh

rank = MPI.COMM_WORLD.Get_rank()
numproc = MPI.COMM_WORLD.Get_size()
comm = MPI.COMM_WORLD

solver=optproperty.fromconfig_mm(sys.argv[1])
a=solver.get_kmesh()
a.kmesh=solver.H0.kpoints
kmesh=a
hv=solver.get_hv()
directindices=solver.get_directindices()
result=parallel_kmesh(solver.solve_shg,kmesh,hv,directindices)


if rank==0:
    if int(solver.config["dimension"])==2:
        result=result*solver.H0.lattice[2,2]/float(solver.config["thickness"])
    with open("shg_directs.pkl","wb") as fp:
        pickle.dump(result,fp)
    with open("hv.pkl","wb") as fp:
        pickle.dump(solver.get_hv(),fp)


